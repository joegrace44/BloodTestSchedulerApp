/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestschedulerapp;

import javax.swing.JOptionPane;

/**
 *
 * @author joegr
 */
public class GUI extends javax.swing.JFrame {

// Priority queue for managing patients based on urgency (Urgent > Medium > Low)
    private PQInterface priorityQueue = new MyPriorityQueue();

// FIFO queue to store the last 5 patients who did not show up
    private QueueInterface noShowQueue = new MyQueue();

// Stores the last patient displayed by "Next Patient" button
    private Patient lastDisplayedPatient = null;

    private String getUrgencyString(int priority) {
        String[] urgencyLevels = {"Low", "Medium", "Urgent"};
        return (priority >= 0 && priority < urgencyLevels.length) ? urgencyLevels[priority] : "Unknown";
    }

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        jLabelGP = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldGP = new javax.swing.JTextField();
        jTextFieldAge = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabelPriority = new javax.swing.JLabel();
        jCheckBoxHospital = new javax.swing.JCheckBox();
        jButtonAdd = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonNoShow = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonShowNoShow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabelName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(29, 53, 87));
        jLabelName.setText("Patient Name:");

        jLabelAge.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelAge.setForeground(new java.awt.Color(29, 53, 87));
        jLabelAge.setText("Patients Age:");

        jLabelGP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelGP.setForeground(new java.awt.Color(29, 53, 87));
        jLabelGP.setText("GP Details:");

        jTextFieldName.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jTextFieldGP.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldGP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGPActionPerformed(evt);
            }
        });

        jTextFieldAge.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgeActionPerformed(evt);
            }
        });

        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "Urgent" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabelPriority.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelPriority.setForeground(new java.awt.Color(29, 53, 87));
        jLabelPriority.setText("Priority:");

        jCheckBoxHospital.setBackground(new java.awt.Color(204, 204, 204));
        jCheckBoxHospital.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxHospital.setForeground(new java.awt.Color(29, 53, 87));
        jCheckBoxHospital.setText("Coming from hospital?");
        jCheckBoxHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHospitalActionPerformed(evt);
            }
        });

        jButtonAdd.setBackground(new java.awt.Color(69, 123, 157));
        jButtonAdd.setForeground(new java.awt.Color(0, 0, 0));
        jButtonAdd.setText("Add Patient");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonNext.setBackground(new java.awt.Color(230, 57, 70));
        jButtonNext.setForeground(new java.awt.Color(0, 0, 0));
        jButtonNext.setText("Next Patient");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jButtonNoShow.setBackground(new java.awt.Color(230, 57, 70));
        jButtonNoShow.setForeground(new java.awt.Color(0, 0, 0));
        jButtonNoShow.setText("Mark No-Show");
        jButtonNoShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNoShowActionPerformed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(29, 53, 87));
        jLabelTitle.setText("Blood Test Scheduler");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButtonShowNoShow.setBackground(new java.awt.Color(230, 57, 70));
        jButtonShowNoShow.setForeground(new java.awt.Color(0, 0, 0));
        jButtonShowNoShow.setText("Show No-Show List");
        jButtonShowNoShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowNoShowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitle)
                .addGap(281, 281, 281))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButtonAdd)
                .addGap(129, 129, 129)
                .addComponent(jButtonNext)
                .addGap(54, 54, 54)
                .addComponent(jButtonNoShow)
                .addGap(40, 40, 40)
                .addComponent(jButtonShowNoShow)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPriority)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldAge, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                .addComponent(jTextFieldGP, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                .addComponent(jLabelName)
                                .addComponent(jLabelAge)
                                .addComponent(jLabelGP)
                                .addComponent(jTextFieldName)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jCheckBoxHospital)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabelTitle)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelAge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelGP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldGP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPriority)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxHospital))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAdd)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonNoShow)
                        .addComponent(jButtonNext)
                        .addComponent(jButtonShowNoShow)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldGPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGPActionPerformed

    private void jTextFieldAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBoxHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxHospitalActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // Get input values from user fields
        String name = jTextFieldName.getText();
        String gpDetails = jTextFieldGP.getText();
        int age;

        // Validate Age Input (Ensure user enters a valid number)
        try {
            age = Integer.parseInt(jTextFieldAge.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid age.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get priority selection from combo box (0 = Low, 1 = Medium, 2 = Urgent)
        int priority = jComboBox1.getSelectedIndex();
        // Check if the patient is coming from the hospital
        boolean fromHospital = jCheckBoxHospital.isSelected();

        // Create a new Patient object with the retrieved values
        Patient newPatient = new Patient(name, priority, age, fromHospital, gpDetails);
        // Add the patient to the priority queue based on urgency
        priorityQueue.enqueue(priority, newPatient);

        // Display confirmation message in the text area
        jTextArea1.append("\n\n" + name + " added to the queue.");

        // Clear input fields after adding the patient
        jTextFieldName.setText("");
        jTextFieldAge.setText("");
        jTextFieldGP.setText("");
        jCheckBoxHospital.setSelected(false);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        if (!priorityQueue.isEmpty()) {
            // Get the next patient (highest priority)
            PQElement pqElement = (PQElement) priorityQueue.dequeue();
            lastDisplayedPatient = (Patient) pqElement.getElement(); // Store correct patient

            // Display the patient's details in the text area
            String patientDetails = "\n\nNext Patient:\n"
                    + "Name: " + lastDisplayedPatient.getName() + "\n"
                    + "Urgency: " + getUrgencyString(pqElement.getPriority()) + "\n"
                    + "Age: " + lastDisplayedPatient.getAge() + "\n"
                    + "Coming from Hospital: " + (lastDisplayedPatient.isComingFromHospital() ? "Yes" : "No");

            jTextArea1.append(patientDetails);
        } else {
            // If queue is empty, inform the user
            jTextArea1.append("\n\nNo patients in queue.");
        }
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonNoShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNoShowActionPerformed
        if (lastDisplayedPatient != null) { // Ensure a patient has been displayed
            // Add the last shown patient to the no-show queue
            noShowQueue.enqueue(lastDisplayedPatient);
            jTextArea1.append("\n\n" + lastDisplayedPatient.getName() + " marked as no-show.");

            // Reset lastDisplayedPatient to prevent duplicate marking
            lastDisplayedPatient = null;
        } else {
            // If no patient is displayed, show a warning message
            jTextArea1.append("\n\nNo patient selected to mark as no-show.");
        }
    }//GEN-LAST:event_jButtonNoShowActionPerformed

    private void jButtonShowNoShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowNoShowActionPerformed
        displayNoShowList(); // Call method to display the no-show list
    }

// Displays the last 5 no-show patients in the text area
    private void displayNoShowList() {
        jTextArea1.append("\n\nLast 5 No-Show Patients:");

        if (noShowQueue.isEmpty()) {
            // Show message if no patients in the no-show list
            jTextArea1.append("\n\nNo patients in the no-show list.");
            return;
        }

        QueueInterface tempQueue = new MyQueue(); // Temporary queue to restore no-show queue

        while (!noShowQueue.isEmpty()) {
            // Gets and displays patient name
            Patient p = (Patient) noShowQueue.dequeue();
            jTextArea1.append("\n\n- " + p.getName());
            tempQueue.enqueue(p); // Store patient in temp queue
        }

        // Restores the original queue
        while (!tempQueue.isEmpty()) {
            noShowQueue.enqueue(tempQueue.dequeue());
        }
    }//GEN-LAST:event_jButtonShowNoShowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonNoShow;
    private javax.swing.JButton jButtonShowNoShow;
    private javax.swing.JCheckBox jCheckBoxHospital;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelGP;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPriority;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldGP;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
